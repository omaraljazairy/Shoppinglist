/**
 * This the User object. When the user signs in through firebase,
 * an Auth object will be returned that will contain all the user info.
 * This object will store them.
 * @author Omar Aljazairy
 * @version 1.2
 * @public
 */

class User {
  /**
   * @param {string} firebaseUid - the uid generated by firebase and not the provider.
   * @param {string} token - the firebase token.
   * @param {string} providerToken - facebook or google own token.
   * @param {string} username - username used for login.
   * @param {number} lastLoggedIn - user's lastlogged in datetime.
   * @param {number} created - user account creation datetime.
   * @param {string} providerId - sign provider like Google, Facebook, Email, ...
   * @param {string} providerUid - provider uid.
   * @param {string} displayName - firebase displayname.
   * @param {string=} email - optional, default value is null.
   * @param {number=} birthday - optional value, default value is null.
   * @param {string=} gender - optional value, default value is null.
   * @param {string=} imageUrl - optional value, default value is null.
   * @param {number=} imageHeight - optional value, default value is 120.
   * @param {number=} imageWidth - optional value, default value is 120.
   * @param {string=} language - the current phone language, default en.
   * @param {string=} location - current location of the user.
   * @param {string=} hometown - user's home town.
   */
  constructor (firebaseUid,
    token,
    providerToken = null,
    username,
    lastLoggedIn,
    created,
    providerId,
    providerUid,
    displayName,
    email = null,
    birthday = null,
    gender = null,
    imageUrl = null,
    imageHeight = 200,
    imageWidth = 200,
    language = 'en',
    location = null,
    hometown = null
  ) {
    this.firebaseUid = firebaseUid
    this.token = token
    this.providerToken = providerToken
    this.username = username
    this.providerId = providerId
    this.providerUid = providerUid
    this.profile = {
      displayName: displayName,
      email: email,
      birthday: birthday,
      gender: gender,
      imageUrl: imageUrl,
      imageHeight: imageHeight,
      imageWidth: imageWidth,
      language: language,
      location: location,
      lastLoggedIn: lastLoggedIn,
      created: created,
      hometown: hometown
    }
  }

  /**
  * converts the firebase JSON AuthUser object to a User Object
  * @param {JSON} firebaseUser - the user object returned from firebase.
  * @param {string} accessToken - required for third party logins like facebook and google.
  * @returns Credentials Object.
  * @public
  */
  static createUser (firebaseUser, providerAccessToken, providerUserData) {
    console.log('providerUserData received: ', providerUserData)
    const firebaseUid = firebaseUser.uid
    const token = firebaseUser.stsTokenManager.accessToken
    const providerToken = providerAccessToken
    const username = firebaseUser.email
    const created = firebaseUser.createdAt
    const lastLoggedIn = firebaseUser.lastLoginAt
    const providerId = firebaseUser.providerData[0].providerId
    const providerUid = firebaseUser.providerData[0].uid
    const displayName = firebaseUser.providerData[0].displayName
    const email = firebaseUser.providerData[0].email
    const birthday = (providerId === 'facebook.com') ? providerUserData.birthday : null
    const gender = (providerId === 'facebook.com') ? providerUserData.gender : null
    const imageUrl = (providerId === 'facebook.com') ? providerUserData.picture.data.url : firebaseUser.providerData[0].photoURL
    const imageHeight = (providerId === 'facebook.com') ? providerUserData.picture.data.height : null
    const imageWidth = (providerId === 'facebook.com') ? providerUserData.picture.data.width : null
    const language = 'en'
    const location = (providerId === 'facebook.com') ? providerUserData.location.name : null
    const hometown = (providerId === 'facebook.com') ? providerUserData.hometown.name : null

    const user = new User(
      firebaseUid,
      token,
      providerToken,
      username,
      lastLoggedIn,
      created,
      providerId,
      providerUid,
      displayName,
      email,
      birthday,
      gender,
      imageUrl,
      imageHeight,
      imageWidth,
      language,
      location,
      hometown
    )
    console.log('created user data object: ', user)
    return user
  }
}

export default User
